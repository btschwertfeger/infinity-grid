# -*- mode: yaml; coding: utf-8 -*-
#
# Copyright (C) 2025 Benjamin Thomas Schwertfeger
# All rights reserved.
# https://github.com/btschwertfeger
#
# Workflow to clean up Helm deployments when pull requests are closed
#

name: PR Cleanup

on:
  pull_request:
    types: [closed]
    branches: ["**"]

concurrency:
  group: cleanup-${{ github.head_ref }}
  cancel-in-progress: false

jobs:
  ## ===========================================================================
  ##    Clean up Helm deployment when PR is closed
  ##
  Cleanup-Deployment:
    if: |
      github.actor == 'btschwertfeger'
      && github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    environment: kubernetes
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit
          disable-sudo: false

      - name: Set up Kubernetes config
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p ~/.kube
          chmod go-rwx ~/.kube
          echo "$KUBECONFIG" > ~/.kube/config

      - name: Set up Helm
        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0
        with:
          version: "latest"

      - name: Generate release name
        id: release-name
        run: |
          # Extract branch name and sanitize it for Kubernetes naming
          BRANCH_NAME="${{ github.head_ref }}"
          # Replace invalid characters with hyphens and convert to lowercase
          RELEASE_NAME=$(echo "ig-${BRANCH_NAME}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')
          # Ensure it doesn't exceed 53 characters (Kubernetes DNS-1123 subdomain limit)
          RELEASE_NAME=$(echo "$RELEASE_NAME" | cut -c1-53 | sed 's/-$//')
          echo "name=$RELEASE_NAME" >> $GITHUB_OUTPUT
          echo "Release name to cleanup: $RELEASE_NAME"

      - name: Check if release exists
        id: check-release
        run: |
          if helm list -n infinity-grid | grep -q "${{ steps.release-name.outputs.name }}"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release ${{ steps.release-name.outputs.name }} found in namespace infinity-grid"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release ${{ steps.release-name.outputs.name }} not found in namespace infinity-grid"
          fi

      - name: Uninstall Helm release
        if: steps.check-release.outputs.exists == 'true'
        run: |
          echo "Uninstalling Helm release: ${{ steps.release-name.outputs.name }}"
          helm uninstall "${{ steps.release-name.outputs.name }}" --namespace infinity-grid --timeout 5m

          echo "Waiting for resources to be cleaned up..."
          sleep 20

          echo "=== Checking remaining resources ==="
          kubectl get all -n infinity-grid -l app.kubernetes.io/instance="${{ steps.release-name.outputs.name }}" || echo "No resources found (expected)"

      - name: Comment on PR with cleanup status
        uses: actions/github-script@v7
        with:
          script: |
            const releaseName = '${{ steps.release-name.outputs.name }}';
            const releaseExists = '${{ steps.check-release.outputs.exists }}' === 'true';

            let comment;
            if (releaseExists) {
              comment = `## üßπ Cleanup Complete

              **Release Name:** \`${releaseName}\`
              **Status:** ‚úÖ Successfully uninstalled

              The infinity-grid deployment has been cleaned up from the Kubernetes cluster.`;
            } else {
              comment = `## üßπ Cleanup Status

              **Release Name:** \`${releaseName}\`
              **Status:** ‚ÑπÔ∏è No deployment found to clean up

              No active deployment was found for this branch.`;
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
