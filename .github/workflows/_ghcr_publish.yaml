# -*- mode: yaml; coding: utf-8 -*-
#
# Copyright (C) 2023 Benjamin Thomas Schwertfeger
# All rights reserved.
# https://github.com/btschwertfeger
#
# Workflow to publish the Docker image to GitHub Container Registry.

name: Publish Docker image to GHCR

on:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Publish-GHCR:
    name: Publish Docker image to GitHub Container Registry
    runs-on: ubuntu-latest
    environment:
      name: GitHub Container Registry
      url: https://github.com/btschwertfeger/infinity-grid/pkgs/container/infinity-grid
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # IMPORTANT: otherwise the current tag does not get fetched and the build version gets worse

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: ${{ runner.temp }}

      - name: Load Docker image
        run: docker load --input ${{ runner.temp }}/infinity-grid-image.tar

      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Tag and push to GHCR
        id: push
        run: |
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker tag btschwertfeger/infinity-grid:build-artifact $tag
            docker push $tag
          done

          # Get digest for attestation
          DIGEST=$(docker inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} --format='{{index .RepoDigests 0}}' | cut -d'@' -f2)
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
